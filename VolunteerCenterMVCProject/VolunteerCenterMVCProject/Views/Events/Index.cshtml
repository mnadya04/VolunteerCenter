@using VolunteerCenterMVCProject.Common
@model VolunteerCenterMVCProject.ViewModels.Events.IndexEventsViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

@if (User.IsInRole(Constants.AdminRole))
{
    <p id="my-p">
        <a asp-action="Create" class="btn" style="background-color:turquoise">Create New</a>
    </p>
}

<div class="row align-items-center g-3 mb-3">
    <form action="/Events/Index" method="get" class="d-flex w-100">
        @foreach (var key in this.ViewContext.HttpContext.Request.Query.Keys)
        {
            if (key != "Name" && key != "Location" && key != "Category" && key != "Pager.Page")
            {
                <input type="hidden" name="@key" value="@this.ViewContext.HttpContext.Request.Query[key]" />
            }
        }

        <div class="col-md-3 me-3">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Name" })
        </div>
        <div class="col-md-3 me-3">
            @Html.TextBoxFor(m => m.Location, new { @class = "form-control", placeholder = "Location" })
        </div>
        <div class="col-md-3 me-3">
            @Html.TextBoxFor(m => m.Category, new { @class = "form-control", placeholder = "Category" })
        </div>
        <div class="col-md-3 d-flex justify-content-end">
            <a href="/Events/Index" class="btn btn-secondary me-2">Clear</a>
            <input type="submit" value="Filter" class="btn btn-primary" />
        </div>
    </form>
</div>

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Deadline</th>
            <th>Location</th>
            <th>Budget</th>
            <th>Category</th>
            <th>Status</th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model.Events)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Deadline)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Budget)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @if (User.IsInRole(Constants.AdminRole))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Delete</a>
                    }
                    else
                    {
                        @if (item.IsUserSignedUp)
                        {
                            <form asp-action="CancelSignUp" asp-route-Id="@item.Id" method="post" style="display: inline;">
                                <button type="submit" class="btn btn-danger btn-sm">Cancel Signup</button>
                            </form>
                        }
                        else
                        {
                            <form asp-action="SignUpForEvent" asp-route-id="@item.Id" method="post" style="display: inline;">
                                <button type="submit" class="btn btn-primary btn-sm">Sign Up</button>
                            </form>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
